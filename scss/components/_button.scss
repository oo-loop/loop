/**
 * Button
 */

@mixin paintButton($color-value) {
  $color: if(isBright($color-value), darken($color-value, 80%), #fff);
  
  color: $color;
  background-color: $color-value;
  @if oo('button.props.border') {
    border-color: $color-value;
  }

  @if oo('button.outline') {
    &[#{ooPrefix()}-button~="outline"] {
      color: if(isBright($color-value, 210), darken($color-value, 30%), $color-value);
      background: transparent;
      box-shadow: none;

      @if oo('button.props.border') and isBright($color-value, 210) {
        border-color: darken($color-value, 20%);
      }
    }
  }

  &:hover,
  &:focus {
    color: $color;
    background-color: darken($color-value, 10%);
    @if oo('button.props.border') {
      border-color: darken($color-value, 10%);
    }
  }
  &:active {
    color: $color;
    background-color: darken($color-value, 12%);
    box-shadow: inset  1px 1px 1px 0 darken($color-value, 25%);
    @if oo('button.props.border') {
      border-color: darken($color-value, 12%);
    }
  }
}

@mixin initButton {

  [#{ooPrefix()}-button] {
    display: inline-block;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;

    cursor: pointer;
    user-select: none;
    touch-action: manipulation;
    -webkit-appearance: none;
    -moz-appearance: none;

    @include generateProperties(oo('button.props'));
    @include generateStatesProperties(oo('button.states'));
  }
  
  @if isNotEmpty(oo('button.paints') and isMap(oo('button.paints'))) {
    @each $name, $value in oo('button.paints') {
      [#{ooPrefix()}-button~="#{$name}"] {
        @include paintButton($value);
      }
    }
  }

  @if isNotEmpty(oo('button.variants')) {
    @each $name, $props in oo('button.variants') {
      @if isMap($props) {
        [#{ooPrefix()}-button~="#{$name}"] {
          @include generateProperties($props);
        }
      }
    }
  }
}