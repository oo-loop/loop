/**
 * Template Areas
 */

$use-template-areas: true !default;
$use-template-areas-gap: true !default;
$use-template-areas-vgap: true !default;

$template-areas: () !default;
$template-areas-gap-sizes: () !default;
$template-areas-vgap-sizes: $template-areas-gap-sizes !default;


@function getAreaNames($areas) {
  $list: ();
  @each $area in $areas {
    $areaNames: split(' ', $area);
    @each $areaName in $areaNames {
      @if notInList($areaName, $list) {
        $list: join($list, $areaName);
      }
    }
  }
  @return $list;
}
@function getAreaColumnNumber($areas) {
  @each $area in $areas {
    $areaNames: split(' ', $area);
    @return length($areaNames);
  }
}
@function areKeysBreakpoints($grid-template-areas){
  $map-keys: map-keys($grid-template-areas);
  @each $key in $map-keys {
    @if inList($key, $breakpoints-classes) {
      @return true;
    }
  }
  @return false;
}

@mixin makeGridTemplate($grid-template-areas) {
  grid-template-areas: $grid-template-areas;
  grid-template-columns: repeat(getAreaColumnNumber($grid-template-areas), 1fr);
}
@mixin makeGridArea($areaNames) {
  @each $area in $areaNames {
    [#{$loop-component-prefix}-area~="#{$area}"] {
      grid-area: #{$area};
    }
  }
}
@mixin makeGrid($grid-template-areas) {
  @include makeGridTemplate($grid-template-areas);
  @include makeGridArea(getAreaNames($grid-template-areas));
}
@mixin makeGridOnBreakpoints($grid-template-areas) {
  $area-names-list: ();
  @each $breakpoint, $areas in $grid-template-areas {
    $area-names-list: getAreaNames(join($area-names-list, getAreaNames($areas)));
    @include breakpoint($breakpoint) {
      @include makeGridTemplate($areas);
    }
  }
  @include makeGridArea($area-names-list);
}

@if $use-template-areas and isNotEmpty($template-areas) {

  [#{$loop-component-prefix}-template] {
    display: grid;
  }

  @if isList($template-areas) {
    [#{$loop-component-prefix}-template] {
      @include makeGrid($template-areas);
    }
  } @else if isMap($template-areas) {
    @if areKeysBreakpoints($template-areas) {
      [#{$loop-component-prefix}-template] {
        @include makeGridOnBreakpoints($template-areas);
      }
    } @else {
      @each $area-name, $template in $template-areas {
        [#{$loop-component-prefix}-template~="#{$area-name}"] {
          @if isMap($template) {
            @include makeGridOnBreakpoints($template);
          } @else if isList($template) {
            @include makeGrid($template);
          }
        }
      }
    }
  }
}

@if $use-template-areas-gap {
  @each $gap-name, $gap-size in $template-areas-gap-sizes {
    [#{$loop-component-prefix}-template~="gap-#{$gap-name}"] { grid-gap: $gap-size; }
  }
}
@if $use-template-areas-gap and $use-template-areas-vgap {
  @each $gap-name, $gap-size in $template-areas-vgap-sizes {
    [#{$loop-component-prefix}-template~="vgap-#{$gap-name}"] { grid-row-gap: $gap-size; }
  }
}
