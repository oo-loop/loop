/**
 * Template Areas
 */

@function getAreaNames($areas) {
  $list: ();
  @each $area in $areas {
    $areaNames: split(' ', $area);
    @each $areaName in $areaNames {
      @if notInList($areaName, $list) {
        $list: join($list, $areaName);
      }
    }
  }
  @return $list;
}
@function getAreaColumnNumber($areas) {
  @each $area in $areas {
    $areaNames: split(' ', $area);
    @return length($areaNames);
  }
}
@function areKeysBreakpoints($grid-template-areas){
  $map-keys: map-keys($grid-template-areas);
  @each $key in $map-keys {
    @if inList($key, $breakpoints-classes) {
      @return true;
    }
  }
  @return false;
}

@mixin makeGridTemplate($grid-template-areas) {
  grid-template-areas: $grid-template-areas;
  grid-template-columns: repeat(getAreaColumnNumber($grid-template-areas), 1fr);
}
@mixin makeGridArea($areaNames) {
  @each $area in $areaNames {
    [#{ooPrefix()}-area~="#{$area}"] {
      grid-area: #{$area};
    }
  }
}
@mixin makeGrid($grid-template-areas) {
  @include makeGridTemplate($grid-template-areas);
  @include makeGridArea(getAreaNames($grid-template-areas));
}
@mixin makeGridOnBreakpoints($grid-template-areas) {
  $area-names-list: ();
  @each $breakpoint, $areas in $grid-template-areas {
    $area-names-list: getAreaNames(join($area-names-list, getAreaNames($areas)));
    @include breakpoint($breakpoint) {
      @include makeGridTemplate($areas);
    }
  }
  @include makeGridArea($area-names-list);
}


@mixin initTemplate($templates: oo('template')) {
  @if oo('areas', $templates) {

    [#{ooPrefix()}-template] {
      display: grid;
    }
  
    @if isList(oo('areas', $templates)) {
      [#{ooPrefix()}-template] {
        @include makeGrid(oo('areas', $templates));
      }
    } @else if isMap(oo('areas', $templates)) {
      @if areKeysBreakpoints(oo('areas', $templates)) {
        [#{ooPrefix()}-template] {
          @include makeGridOnBreakpoints(oo('areas', $templates));
        }
      } @else {
        @each $area-name, $template in oo('areas', $templates) {
          [#{ooPrefix()}-template~="#{$area-name}"] {
            @if isMap($template) {
              @include makeGridOnBreakpoints($template);
            } @else if isList($template) {
              @include makeGrid($template);
            }
          }
        }
      }
    }
  }

  @if oo('gap.sizes', $templates) {
    @each $gap-name, $gap-size in oo('template.gap.sizes') {
      [#{ooPrefix()}-template~="gap-#{$gap-name}"] { grid-gap: $gap-size; }
    }
  }
  @if oo('gap.vsizes', $templates) {
    @each $gap-name, $gap-size in oo('template.gap.vsizes') {
      [#{ooPrefix()}-template~="vgap-#{$gap-name}"] { grid-row-gap: $gap-size; }
    }
  }
}
