/**
 * Checkbox
 */

@mixin checkboxSize($size) {
  $mark-width: floor($size * 0.4);
  $mark-height: floor($size * 0.6);
  $mark-border-width: floor($size * 0.12);

  & + label {
    &::before {
      left: floor(($size / 2) - ($mark-width / 2) + ($mark-border-width / 3));
    }
    &::after {
      margin-right: floor($size / 2.5);
      min-width: $size;
      min-height: $size;
    }

    & + [#{ooPrefix()}-checkbox] + label {
      margin-top: floor($size / 3);
    }
  }
  &:checked + label::before {
    min-width: $mark-width;
    min-height: $mark-height;
    border-right-width: $mark-border-width;
    border-bottom-width: $mark-border-width;
  }
}

@mixin initCheckbox {
  [#{ooPrefix()}-checkbox] {
    position: absolute;
    opacity: 0;
    pointer-events: none;

    & + label {
      position: relative;
      display: flex;
      align-items: center;
      width: fit-content;
      font-weight: inherit;
      line-height: 1.1;

      &::after {
        display: flex;
        order: -1;
        content:'';
        @include generateProperties(oo('checkbox.props'));
      }
    }

    &:checked + label {
      &::before {
        position: absolute;
        bottom: 28%;
        content:'';
        border-right: solid oo('checkbox.checked.markColor');
        border-bottom: solid oo('checkbox.checked.markColor');
        transform: rotateZ(40deg);
      }
      &::after {
        @include generateProperties(oo('checkbox.checked.props'));
      }
    }

    @include checkboxSize(oo('checkbox.sizes.default'));

    @if isNotEmpty(oo('checkbox.sizes.variants')) {
      @each $name, $size in oo('checkbox.sizes.variants') {
        &[#{ooPrefix()}-checkbox~="#{$name}"] {
          @include checkboxSize($size);
        }
      }

      @if isNotEmpty(oo('checkbox.screens')) {
        @each $breakpoint in oo('checkbox.screens') {
          @include breakpoint($breakpoint) {
            @each $name, $size in oo('checkbox.sizes.variants') {
              $suffix: \@#{$breakpoint};
              &[#{ooPrefix()}-checkbox~="#{$name}#{$suffix}"] {
                @include checkboxSize($size);
              }
            }
          }
        }
      }
    }
    @if (oo('colors.borders')) {
      @include loop(oo('colors.borders'), 'border-color', '&[class*="border', true, '"] + label::after');
    }
  }
}