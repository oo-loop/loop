/**
 * Select
 */

$select-size:    10px !default;
$select-weight:  2px !default;
$select-color:   $input-color !default;
$select-bgcolor: $input-bgcolor !default;

$select-themes: (
    // 'plain' : (
    //     'size' : $select-size,
    //     'color': $select-bgcolor,
    //     'bgcolor': $input-border-color,
    // )
) !default;

@mixin selectTheme($theme) {
    @if map-has-key($theme, 'size') {
        &::before { width: (map-get($theme, 'size') * 3); }
        &::after {
            right: map-get($theme, 'size');
            width: map-get($theme, 'size');
            height: map-get($theme, 'size');
        }
    }
    @if map-has-key($theme, 'weight') {
        &::after {
            border-bottom-width: map-get($theme, 'weight');
            border-right-width: map-get($theme, 'weight');
        }
    }
    @if map-has-key($theme, 'bgcolor') {
        &::before { background-color: map-get($theme, 'bgcolor'); }
    }
    @if map-has-key($theme, 'color') {
        &::after {
            border-bottom-color: map-get($theme, 'color');
            border-right-color: map-get($theme, 'color');
        }
    }
}

[#{$loop-component-prefix}-form~="select"] {
    position: relative;
    display: block;
    font-size: $input-font-size;

    &::before {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;

        content: '';

        border-top: $input-border;
        border-right: $input-border;
        border-bottom: $input-border;
        border-top-right-radius: $input-border-radius;
        border-bottom-right-radius: $input-border-radius;

        pointer-events: none;
    }

    &::after {
        position: absolute;
        top: 50%;

        content: '';

        border-bottom-style: solid;
        border-right-style: solid;

        pointer-events: none;
        transform: rotateZ(45deg) translate3d(-50%, -50%, 0);
    }

    @include selectTheme((
        'size' : $select-size,
        'color': $select-color,
        'bgcolor': $select-bgcolor,
        'weight': $select-weight,
    ));

    > select {
        @extend %input;
        margin: 0;
        height: 100%;
        font-size: inherit;
        appearance:none;

        /* hide the default arrow in ie10 and ie11 */
        &::-ms-expand {
            display: none;
        }
    }

    @if isNotEmpty($select-themes) and isMap($select-themes) {
        @each $theme-name, $theme in $select-themes {
            &[#{$loop-component-prefix}-form~="#{$theme-name}"] {
                @include selectTheme($theme);
            }
        }
    }

    &[class*="color-"] {
        > select { color: inherit !important; }
    }
    &[class*="bg-"] {
        > select { background-color: inherit !important; }
    }
    &[class*="border-"] {
        > select,
        &::before {
            border-color: inherit !important;
        }
    }
}

@if isNotEmpty($input-padding-sizes) {
    @each $name, $padding in $input-padding-sizes {
        [#{$loop-component-prefix}-form~="select"][#{$loop-component-prefix}-form~="#{$name}"] > select {
            padding: #{$padding};
            padding-right: 0;
        }
    }
}
