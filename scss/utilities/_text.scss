/**
 * Text utilites
 */


/**
 * Text Sizes
 */

@include loop(oo('text.size.props'), 'font-size', '.text', true);
@include loopBreakpoints(oo('text.size.screens'), oo('text.size.props'), 'font-size', '.text', true);


/**
 * Text alignements
 */
$text-alignments: (
  'left',
  'right',
  'center',
) !default;
$text-alignments-breakpoints-classes: () !default;
$text-alignments-is-important: false !default;

@include loop($text-alignments, 'text-align', '.text', $text-alignments-is-important);
@include loopBreakpoints($text-alignments-breakpoints-classes, $text-alignments, 'text-align', '.text', $text-alignments-is-important);


/**
 * Text Transform
 */
$text-transforms: (
  'uppercase',
) !default;
$text-transforms-breakpoints-classes: () !default;
$text-transforms-is-important: false !default;
@include loop($text-transforms, 'text-transform', '.text', $text-transforms-is-important);
@include loopBreakpoints($text-transforms-breakpoints-classes, $text-transforms, 'text-transform', '.text', $text-transforms-is-important);


/**
 * Text Decoration
 */
$text-decorations: () !default;
$text-decorations-breakpoints-classes: () !default;
$text-decorations-is-important: false !default;
@include loop($text-decorations, 'text-decoration', '.text', $text-decorations-is-important);
@include loopBreakpoints($text-decorations-breakpoints-classes, $text-decorations, 'text-decoration', '.text', $text-decorations-is-important);

/**
 * Letter Spacing
 */
$letter-spacings: (
  'narrow': -.05rem,
  'wide': .05rem,
) !default;
$letter-spacings-breakpoints-classes: () !default;
$letter-spacings-is-important: false !default;
@include loop($letter-spacings, 'letter-spacing', '.letter-spacing', $letter-spacings-is-important);
@include loopBreakpoints($letter-spacings-breakpoints-classes, $letter-spacings, 'letter-spacing', '.letter-spacing', $letter-spacings-is-important);



/**
 * Font Style
 */
$font-styles: (
  'italic',
) !default;
$font-styles-breakpoints-classes: () !default;
$font-styles-is-important: false !default;
@include loop($font-styles, 'font-style', '.font', $font-styles-is-important);
@include loopBreakpoints($font-styles-breakpoints-classes, $font-styles, 'font-style', '.font', $font-styles-is-important);


@each $property-name, $options  in oo('utilities') {

  $props: if(map-has-key($options, 'props'), oo('props', $options), ());
  $property-name: toKebabCase($property-name);
  $prefix: if(map-has-key($options, 'prefix'), oo('prefix', $options), nth(split('-', $property-name), 1));
  $is-important: if(map-has-key($options, 'important'), oo('important', $options), false);
  $screens: if(map-has-key($options, 'screens'), oo('screens', $options), ());
  
  @if not (str-slice(prefix, 1, 1) == '.') {
    $prefix: '.' + $prefix;
  }

  @include loop(
    $props,
    $property-name,
    $prefix,
    $is-important
  );

  @include loopBreakpoints(
    $screens,
    $props,
    $property-name,
    $prefix,
    $is-important
  );
}