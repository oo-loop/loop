@use 'sass:meta';
@use 'sass:string';
@use 'color';
@use 'list';
@use 'map';
@use 'number';

/// Convert pixel unit to Rem unit
/// @param number $value pixel value
/// @param number $base pixel value for 1rem
/// @return number rem value

@function toRem($pixel, $base: 16) {
  @return math.div((1rem * $pixel), $base);
}

/// Transform camelCase to kebab-case
/// @param string $string The string to modify
/// @return string

@function toKebabCase($string) {
  $kebabString: '';
  @for $i from 1 through string.length($string) {
    $character: string.slice($string, $i, $i);
    $kebabString: $kebabString + if($character == string.to-lower-case($character) or $i == 1, to-lower-case($character), to-lower-case(-#{$character}));
  }
  @return $kebabString;
}


/// Convert to type
/// @param string $type to be converted into
/// @param mixed $data data to check
/// @return mixed

@function toType($type, $data) {
  @if meta.type-of($data) == $type {
    @return $data;
  }
  @if $type == 'string' {
    @return meta.inspect($data);
  }
  @if $type == 'color' {
    @return color.toColor($data);
  }
  @if $type == 'number' {
    @return number.toNumber($data);
  }
  @if $type == 'list' {
    @return list.toList($data);
  }
  @if $type == 'map' {
    @return map.toMap($data);
  }
  @return $data;
}